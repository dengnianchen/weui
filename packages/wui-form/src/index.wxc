<template>
	<slot></slot>
</template>

<script>
	import defaultValidators from './form-validator';
	
	const formField = require('./form-field');
	
	export default {
		config: {
			usingComponents: {},
		},
		relations: {
			formField: {
				type: 'descendant',
				target: formField,
			}
		},
		behaviors: [],
		properties: {
			disabled: {
				type: Boolean,
				value: false,
				observer(val) {
					const fieldNodes = this.getRelationNodes('formField');
					for (let fieldNode of fieldNodes)
						fieldNode.setData({ _formDisabled: val });
				},
			},
			validateOnBlur: {
				type: Boolean,
				value: true,
				observer(val) {
					const fieldNodes = this.getRelationNodes('formField');
					for (let fieldNode of fieldNodes)
						fieldNode.setData({ _formValidateOnBlur: val });
				},
			},
		},
		data: {
			validators: defaultValidators,
		},
		methods: {
			
			/// Public Functions ///
			
			/**
			 * 设置自定义验证函数
			 *
			 * 自定义验证函数范例：
			 *
			 *     const customValidators = {
			 *       yourValidator: function(value) {
			 *         if (valid) return '';
			 *         else return 'error message';
			 *       }
			 *     }
			 *
			 * @param customValidators 包含自定义验证函数名称和函数体的键值对
			 */
			setCustomValidators(customValidators) {
				this.setData({
					validators: $.extend(defaultValidators, customValidators),
				});
			},
			
			setErrors(errors) {
				let nodes = this.getRelationNodes('formField');
				for (let node of nodes) {
					if (errors[node.name()])
						node.error(errors[node.name()]);
					else
						node.error(false);
				}
			},
			
			field(name) {
				let nodes = this.getRelationNodes('formField');
				for (let node of nodes)
					if (node.name() === name)
						return node;
				return null;
			},
			
			submit(e = null) {
				// 提交时，收集所有field组件的value值，然后触发submit事件
				let nodes = this.getRelationNodes('formField');
				
				// 验证所有控件的数据合法性
				let isAllValid = true;
				for (let node of nodes) {
					let result = node.validate();
					if (result) {
						node.error(result);
						isAllValid = false;
					} else
						node.error(false);
				}
				if (!isAllValid) {
					// 存在非法数据，显示错误信息，中止提交
					$.Modal.show('表单填写错误', '请更正错误后重试');
					return false;
				}
				
				let params = {};
				let changedParams = {};
				for (let node of nodes) {
					if (!node.name() || node.data.excludeOnSubmit)
						continue;
					params[node.name()] = node.value();
					if (node.data._changed)
						changedParams[node.name()] = node.value();
				}
				this.triggerEvent('submit', $.extend(e ? e.detail : null, {
					params: params,
					changedParams: changedParams,
				}, {}));
				return true;
			},
		},
	};
</script>

<style>
</style>
